To create a virtual environment for a Flask project, follow these steps:

### 1. Install Python

Make sure Python is installed on your system. You can download it from [python.org](https://www.python.org/downloads/).

### 2. Install `virtualenv` (optional)

You can use Python's built-in `venv` module, but if you prefer, you can install `virtualenv` for more flexibility:

```bash
pip install virtualenv
```

### 3. Create a Virtual Environment

Navigate to your project directory and create a virtual environment. You can name your virtual environment anything you like, but `venv` is a common convention.

Using `venv`:

```bash
python -m venv venv
```

Using `virtualenv` (if installed):

```bash
virtualenv venv
```

### 4. Activate the Virtual Environment

Activate the virtual environment using the appropriate command for your operating system:

#### On Windows:

```bash
venv\Scripts\activate
```

#### On macOS/Linux:

```bash
source venv/bin/activate
```

After activation, your command prompt will change to indicate that you are now working inside the virtual environment.

### 5. Install Flask

With the virtual environment activated, install Flask using pip:

```bash
pip install Flask
```

### 6. Verify Installation

To verify that Flask is installed, you can run:

```bash
python -m flask --version
```

### 7. Create a Simple Flask Application

Create a simple Flask application to test everything is set up correctly:

Create a file named `app.py` with the following content:

```python
from flask import Flask

app = Flask(__name__)

@app.route('/')
def home():
    return 'Hello, Flask!'

if __name__ == '__main__':
    app.run(debug=True)
```

### 8. Run the Flask Application

Run your Flask application:

```bash
python app.py
```

Navigate to `http://127.0.0.1:5000/` in your web browser, and you should see "Hello, Flask!".

This setup ensures you have a virtual environment specifically for your Flask project, isolating it from other Python projects and dependencies.